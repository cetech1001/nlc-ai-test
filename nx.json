{
  "$schema": "./node_modules/nx/schemas/nx-schema.json",
  "namedInputs": {
    "default": [
      "{projectRoot}/**/*",
      "sharedGlobals"
    ],
    "production": [
      "default",
      "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
      "!{projectRoot}/tsconfig.spec.json",
      "!{projectRoot}/src/test-setup.[jt]s",
      "!{projectRoot}/.eslintrc.json",
      "!{projectRoot}/eslint.config.mjs"
    ],
    "sharedGlobals": []
  },
  "plugins": [
    {
      "plugin": "@nx/js/typescript",
      "options": {
        "typecheck": {
          "targetName": "typecheck"
        },
        "build": {
          "targetName": "build",
          "configName": "tsconfig.lib.json",
          "buildDepsName": "build-deps",
          "watchDepsName": "watch-deps"
        }
      },
      "exclude": [
        "libs/web/api-client/*",
        "libs/types/*",
        "libs/api/types/*",
        "libs/api/database/*",
        "libs/api/messaging/*",
        "libs/api/validation/*",
        "libs/api/auth/*",
        "libs/sdk/core/*",
        "libs/sdk/users/*",
        "libs/sdk/auth/*",
        "libs/sdk/email/*",
        "libs/sdk/billing/*",
        "libs/sdk/main/*",
        "libs/sdk/analytics/*",
        "libs/api/dto/*",
        "libs/sdk/leads/*",
        "libs/sdk/community/*",
        "libs/sdk/media/*",
        "libs/sdk/notifications/*",
        "libs/sdk/messages/*",
        "libs/sdk/agents/*",
        "libs/sdk/course/*",
        "libs/sdk/integrations/*",
        "libs/sdk/content/*"
      ]
    },
    {
      "plugin": "@nx/next/plugin",
      "options": {
        "startTargetName": "start",
        "buildTargetName": "build",
        "devTargetName": "dev",
        "serveStaticTargetName": "serve-static",
        "buildDepsTargetName": "build-deps",
        "watchDepsTargetName": "watch-deps"
      }
    },
    {
      "plugin": "@nx/webpack/plugin",
      "options": {
        "buildTargetName": "build",
        "serveTargetName": "serve",
        "previewTargetName": "preview",
        "buildDepsTargetName": "build-deps",
        "watchDepsTargetName": "watch-deps"
      }
    },
    {
      "plugin": "@nx/react/router-plugin",
      "options": {
        "buildTargetName": "build",
        "devTargetName": "dev",
        "startTargetName": "start",
        "watchDepsTargetName": "watch-deps",
        "buildDepsTargetName": "build-deps",
        "typecheckTargetName": "typecheck"
      }
    },
    {
      "plugin": "@nx/vite/plugin",
      "options": {
        "buildTargetName": "build",
        "testTargetName": "test",
        "serveTargetName": "serve",
        "devTargetName": "dev",
        "previewTargetName": "preview",
        "serveStaticTargetName": "serve-static",
        "typecheckTargetName": "typecheck",
        "buildDepsTargetName": "build-deps",
        "watchDepsTargetName": "watch-deps"
      }
    },
    {
      "plugin": "@nx/js/typescript",
      "include": [
        "libs/web/api-client/*",
        "libs/types/*",
        "libs/api/types/*",
        "libs/api/database/*",
        "libs/api/messaging/*",
        "libs/api/validation/*",
        "libs/api/auth/*",
        "libs/sdk/core/*",
        "libs/sdk/users/*",
        "libs/sdk/auth/*",
        "libs/sdk/email/*",
        "libs/sdk/billing/*",
        "libs/sdk/main/*",
        "libs/sdk/analytics/*",
        "libs/api/dto/*",
        "libs/sdk/leads/*",
        "libs/sdk/community/*",
        "libs/sdk/media/*",
        "libs/sdk/notifications/*",
        "libs/sdk/messages/*",
        "libs/sdk/agents/*",
        "libs/sdk/course/*",
        "libs/sdk/integrations/*",
        "libs/sdk/content/*"
      ],
      "options": {
        "typecheck": {
          "targetName": "typecheck"
        }
      }
    },
    {
      "plugin": "@nx/eslint/plugin",
      "options": {
        "targetName": "lint"
      }
    }
  ],
  "generators": {
    "@nx/next": {
      "application": {
        "style": "tailwind",
        "linter": "none"
      }
    },
    "@nx/react": {
      "library": {
        "unitTestRunner": "none"
      }
    }
  },
  "sync": {
    "applyChanges": true
  }
}
